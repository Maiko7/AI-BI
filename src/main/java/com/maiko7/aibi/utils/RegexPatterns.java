package com.maiko7.aibi.utils;

/**
 * 通用正则表达式
 * @author: Maiko7
 * @create: 2024-05-24-9:09
 */
public abstract class RegexPatterns {
    /**
     * 手机号正则
     * 这个正则表达式是用于验证中国大陆手机号码的。
     * ^ 表示字符串的开始。
     * 1 表示手机号码的开头必须是数字1。
     *
     * ([38][0-9]|4[579]|5[0-3,5-9]|6[6]|7[0135678]|9[89]) 是一个捕获组，匹配第二位和第三位数字组合的模式：
     * [38][0-9] 表示第二位是3或8，第三位是0到9之间的任意数字。例如：30-39, 80-89。
     * 4[579] 表示第二位是4，第三位是5、7或9。例如：45, 47, 49。
     * 5[0-3,5-9] 表示第二位是5，第三位是0-3或5-9。例如：50-53, 55-59。
     * 6[6] 表示第二位是6，第三位是6。例如：66。
     * 7[0135678] 表示第二位是7，第三位是0、1、3、5、6、7或8。例如：70, 71, 73, 75, 76, 77, 78。
     * 9[89] 表示第二位是9，第三位是8或9。例如：98, 99。
     * \d{8} 表示接下来的八位必须是数字（0-9），表示手机号码的后八位。
     *
     * $ 表示字符串的结束。
     */
    public static final String PHONE_REGEX = "^1([38][0-9]|4[579]|5[0-3,5-9]|6[6]|7[0135678]|9[89])\\d{8}$";

    /**
     * 邮箱正则
     * ^ 表示字符串的开始。
     * [a-zA-Z0-9_-]+ 匹配一个或多个字母（大小写均可）、数字、下划线或连字符。这部分是匹配邮箱的本地部分（即 @ 之前的部分）。
     * @ 匹配字符 '@'。
     * [a-zA-Z0-9_-]+ 匹配一个或多个字母（大小写均可）、数字、下划线或连字符。这部分是匹配邮箱的域名部分的第一部分（即第一个点 . 之前的部分）。
     * (\.[a-zA-Z0-9_-]+)+ 匹配一个或多个点 . 后跟一个或多个字母（大小写均可）、数字、下划线或连字符。这部分是匹配域名的其余部分，可以有多个子域（即多个点 . 分隔的部分）。
     * $ 表示字符串的结束。
     */
    public static final String EMAIL_REGEX = "^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$";

    /**
     * 密码正则。4-32位的字母、数字、下划线
     *
     * ^ 表示字符串的开始。
     * \\w 表示任意字母、数字或下划线。相当于 [a-zA-Z0-9_]。
     * {4,32} 表示前面的字符（\\w）可以重复4到32次。
     * $ 表示字符串的结束。
     */
    public static final String PASSWORD_REGEX = "^\\w{4,32}$";

    /**
     * 验证码正则, 6位数字或字母
     *
     * ^ 表示字符串的开始。
     * [a-zA-Z\d] 匹配任意一个字母（大小写均可）或数字。
     * a-z 表示小写字母。
     * A-Z 表示大写字母。
     * \d 表示数字（0-9）。
     * {6} 表示前面的字符（字母或数字）必须精确匹配6次。
     * $ 表示字符串的结束。
     */
    public static final String VERIFY_CODE_REGEX = "^[a-zA-Z\\d]{6}$";

    /**
     * 账号正则  他这里是包含了就不符合这个账号。是反的。
     * [ 和 ] 定义了一个字符类，匹配字符类中的任何一个字符。
     * 字符类中的字符包括：
     * 普通特殊字符： `~!@#$%^&*()+=|{}':;',.<>/?
     * 转义字符：由于 [ 和 ] 是特殊字符，需要用 \\ 进行转义，表示匹配实际的方括号字符 [ ]。
     * 中文标点符号：~！@#￥%……&*（）——+|{}【】‘；：”“’。，、？
     *
     *
     * A 1 a - _ 都是符合的
     */
//    public static final String ACCOUNT_REGEX = "[`~!@#$%^&*()+=|{}':;',\\\\[\\\\].<>/?~！@#￥%……&*（）——+|{}【】‘；：”“’。，、？]";


    /**
     * 账号正则
     * ^表示字符串的开始。
     * [a-zA-Z0-9_-]+ 表示一个或多个字母、数字、下划线或连字符。
     * $表示字符串的结束。
     */
    public static final String ACCOUNT_REGEX = "^[a-zA-Z0-9_-]+$";
}
